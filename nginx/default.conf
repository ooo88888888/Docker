#Upstream Blocks:
upstream client {
  server client:3000;
}

upstream api {
  server api:5000;
}

#Server Block:
server {
  listen 80;

  #Location Blocks:
  location / {
    proxy_pass http://client;
  }

  location /ws {
      proxy_pass http://client;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
  }

  location /api {
    rewrite /api/(.*) /$1 break;
    proxy_pass http://api;
  }
}

#Upstream Blocks:

    #upstream client { server client:3000; }: Defines an upstream group named "client" with a single server running on the hostname "client" and port 3000.
    #upstream api { server api:5000; }: Defines an upstream group named "api" with a single server running on the hostname "api" and port 5000.

#Server Block:

    #listen 80: Specifies that this server block will listen on port 80.

#Location Blocks:

    #location / { proxy_pass http://client; }: For requests to the root ("/"), it passes them to the "client" upstream group, effectively acting as a reverse proxy for the client application running on port 3000.

    #location /ws { ... }: For requests to "/ws", it also proxies them to the "client" upstream group but with additional settings to handle WebSocket connections. The proxy_http_version 1.1; line ensures that HTTP/1.1 is used, and the proxy_set_header lines handle the necessary headers for upgrading the connection to a WebSocket.

    #location /api { ... }: For requests to "/api", it rewrites the URI to remove the "/api" prefix and then proxies the request to the "api" upstream group, effectively acting as a reverse proxy for the API server running on port 5000.

